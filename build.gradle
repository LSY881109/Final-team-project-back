// 추가2
buildscript {
    ext {
        // Querydsl 버전 유지 (Jakarta EE 호환 버전)
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    // Spring Boot 버전 수정 (3.3.1 안정 버전 권장)
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.busanit501'
version = '0.0.1-SNAPSHOT'
// description도 프로젝트 이름에 맞게 수정하는 것을 권장합니다.
description = '2Team-back'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Web, JPA, Security, Lombok, DevTools (기본)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation' // (Validation 추가 권장)

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // 테스트 환경 Lombok 중복 설정 제거 (annotationProcessor가 처리)
    // testCompileOnly 'org.projectlombok:lombok'
    // testAnnotationProcessor 'org.projectlombok:lombok' 

    // 데이터 변환 및 매핑 (DTO <-> Entity)
    implementation 'org.modelmapper:modelmapper:3.1.0'

    // API 문서화
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.3'

    // JSON 파싱/생성 유틸리티
    implementation 'com.google.code.gson:gson:2.11.0'

    // JWT 설정
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // MongoDB 설정
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Flask 서버 통신 (OkHttp)
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'

    // ----------------------------------------------------
    // Querydsl 설정 (동적 쿼리)
    // ----------------------------------------------------
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    )

}

tasks.named('test') {
    useJUnitPlatform()
}
// Querydsl 생성을 위한 소스셋 설정
sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}

// 빌드 속도 저하 방지를 위해 이 부분은 삭제하는 것을 강력히 권장합니다.
// compileJava.dependsOn('clean') 

// Querydsl QClass 파일 생성을 위한 task 추가
tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory.set(file(project.buildDir.path + "/generated"))
}