buildscript {
    ext {
        // Querydsl 버전 유지 (Jakarta EE 호환 버전)
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    // Spring Boot 버전: 요청하신 3.5.4 적용
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.busanit501'
version = '0.0.1-SNAPSHOT'
description = 'API_REST_TEST_JWT_REACT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // ----------------------------------------------------
    // Core & Persistence (기본)
    // ----------------------------------------------------
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Validation 스타터 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Security & JWT
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Database (MariaDB, MongoDB)
    // 🚩 FIX: runtimeOnly -> implementation으로 변경 (클래스 로드 오류 해결)
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb' // 몽고디비 의존성

    // ----------------------------------------------------
    // Utility & Tooling
    // ----------------------------------------------------
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.modelmapper:modelmapper:3.1.0'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'com.squareup.okhttp3:okhttp:4.11.0' // OkHttp dependency

    // API 문서화 (SpringDoc) - 버전 교체 적용
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.3'

    // Querydsl 설정
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    )

    // ----------------------------------------------------
    // Test
    // ----------------------------------------------------
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// ----------------------------------------------------
// Querydsl 및 빌드 설정
// ----------------------------------------------------

// Querydsl 생성을 위한 task 설정 추가: Q-Class 생성 경로 지정
tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory.set(file(project.buildDir.path + "/generated"))
}

// 테스트 설정 유지
tasks.named('test') {
    useJUnitPlatform()
    ignoreFailures = true // 이전 오류 발생을 막기 위해 유지
}

// Querydsl 소스셋 설정 유지: build/generated 폴더를 컴파일 경로에 추가
sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}

// 💡 Querydsl 생성 폴더 명시적 삭제 추가
clean {
    delete file(project.buildDir.path + "/generated")
}

// 컴파일 시 clean 실행 설정 유지 (사용자 요청에 따라 유지)
compileJava.dependsOn('clean')
